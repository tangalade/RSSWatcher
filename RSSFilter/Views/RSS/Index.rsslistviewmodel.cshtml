@model RSSFilter.ViewModel.RSSListViewModel
@{
    ViewBag.Title = "Browse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-title">
    <h2>RSS Feed Items</h2>
</div>
<div class="list-control-header">
    <div style="display: inline-block">
        <div class="filter-items">
            @if (Model.control.filters.FilterByRSSPublishDate)
            {
                <a data-col="RSSPublishDate"><span>@Html.DisplayFor(m => m.control.filters.RSSPublishDateFilter) </span><span class="icon">&#10006</span></a>
            }
            @if (Model.control.filters.FilterByItemType)
            {
                <a data-col="ItemType"><span>@Html.DisplayFor(m => m.control.filters.ItemTypeFilter) </span><span class="icon">&#10006</span></a>
            }
            @if (Model.control.filters.FilterByArtist)
            {
                <a data-col="Artist"><span>@Html.DisplayFor(m => m.control.filters.ArtistFilter) </span><span class="icon">&#10006</span></a>
            }
        </div>
    </div>
    <div class="page-size-items">
        Items per page:
        @foreach (var pageSize in Model.control.pager.ValidPageSizes)
        {
            <span class="page-size-item">
                @Html.Raw((Model.control.pager.PageSize != pageSize) ? "<a>" + pageSize.ToString() + "</a>" : pageSize.ToString())
            </span>
        }
    </div>
</div>
<table class="table table-bordered table-hover rss-item-table">
    <thead>
        <tr class="header-row">
            <th data-col="RSSPublishDate">
                @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).RSSPublishDate)
                @Html.Raw(Model.control.sorter.Name.Equals("RSSPublishDate") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="ItemType">
                @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).ItemType.Name)
                @Html.Raw(Model.control.sorter.Name.Equals("ItemType") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Artist">
                @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).Artist.Name)
                @Html.Raw(Model.control.sorter.Name.Equals("Artist") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Title">
                @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).Title)
                @Html.Raw(Model.control.sorter.Name.Equals("Title") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Edit"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.rssItems.Count() == 0)
        {
            <tr><td colspan="5">k2nblog.com has not yet given us any items.</td></tr>
        }
        @foreach (var rssItem in Model.rssItems)
        {
            <tr class="rss-item-row">
                <td class="url-hover" data-col="RSSPublishDate">
                    <a class="text">@Html.DisplayFor(m => rssItem.RSSPublishDate)</a>
                </td>
                <td class="url-hover" data-col="ItemType">
                    <a class="text">@Html.DisplayFor(m => rssItem.ItemType.Name)</a>
                </td>
                <td class="url-hover" data-col="Artist">
                    <a class="text">@Html.DisplayFor(m => rssItem.Artist.Name)</a>
                </td>
                <td class="url-hover" data-col="Title">
                    <a class="text" href="@((rssItem.RSSURI != null) ? rssItem.RSSURI : "")">
                        @Html.DisplayFor(m => rssItem.Title)
                    </a>
                </td>
                <td data-col="Edit">
                    <a class="text">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="page-control">
    <span class="page-control-button">
        @Html.Raw((Model.control.pager.PageNum == 1) ? "Previous" : "<a>Previous</a>")
    </span>
    @if (Model.control.pager.NumPages > 5)
    {
        if (Model.control.pager.PageNum > 4)
        {
            <span class="page-select-button"><a>1</a></span>
            <span class="page-select-ellipsis">&#x25e6 &#x25e6 &#x25e6</span>
            <span class="page-select-button"><a>@(Model.control.pager.PageNum - 1)</a></span>
        }
        else
        {
            for (int i = 1; i <= Model.control.pager.PageNum - 1; i++)
            {
                <span class="page-select-button"><a>@(i)</a></span>
            }
        }
        <span class="page-select-button">@(Model.control.pager.PageNum)</span>
        if ((Model.control.pager.NumPages - Model.control.pager.PageNum) > 4)
        {
            <span class="page-select-button"><a>@(Model.control.pager.PageNum + 1)</a></span>
            <span class="page-select-ellipsis">&#x25e6 &#x25e6 &#x25e6</span>
            <span class="page-select-button"><a>@(Model.control.pager.NumPages)</a></span>
        }
        else
        {
            for (int i = Model.control.pager.PageNum + 1; i <= Model.control.pager.NumPages; i++)
            {
                <span class="page-select-button"><a>@(i)</a></span>
            }
        }
    }
    else
    {
        for (int i = 1; i <= Model.control.pager.PageNum-1; i++)
        {
            <span class="page-select-button"><a>@(i)</a></span>
        }
        <span class="page-select-button">@(Model.control.pager.PageNum)</span>
        for (int i = Model.control.pager.PageNum + 1; i <= Model.control.pager.NumPages; i++)
        {
            <span class="page-select-button"><a>@(i)</a></span>
        }
    }
    <span class="page-control-button">
        @Html.Raw((Model.control.pager.PageNum == Model.control.pager.NumPages) ? "Next" : "<a>Next</a>")
    </span>
</div>

@Scripts.Render("~/Scripts/list-control.js")
<script>
    var rss_table = document.getElementsByClassName("rss-item-table")[0];

    // Add header row click handlers
    var rss_header = rss_table.getElementsByClassName("header-row");
    var rss_header_cells = rss_header[0].getElementsByTagName("th");
    for (var i = 0; i < rss_header_cells.length; i++) {
        rss_header_cells[i].addEventListener("click", clickHeader);
    }

    // Add item row click handlers
    var rss_item_rows = rss_table.getElementsByClassName("rss-item-row");
    for (var i = 0; i < rss_item_rows.length; i++) {
        var rss_item_row_links = rss_item_rows[i].getElementsByTagName("a");
        for (var j = 0; j < rss_item_row_links.length; j++) {
            if (rss_item_row_links[j].getAttribute("href") == null)
                rss_item_row_links[j].addEventListener("click", clickItem);
        }
    }

    // Add filter remove click handlers
    var filterDiv = document.getElementsByClassName("filter-items")[0];
    var filterItems = filterDiv.getElementsByTagName("a");
    for (var i = 0; i < filterItems.length; i++) {
        filterItems[i].addEventListener("click", clickFilter);
    }

    // Add page size click handlers
    var pageSizeDiv = document.getElementsByClassName("page-size-items")[0];
    var pageSizeItems = pageSizeDiv.getElementsByTagName("a");
    for (var i = 0; i < pageSizeItems.length; i++) {
        pageSizeItems[i].addEventListener("click", clickPageSize);
    }

    // Add page control click handlers
    var pageControlDiv = document.getElementsByClassName("page-control")[0];
    var pageControlItems = pageControlDiv.getElementsByTagName("a");
    for (var i = 0; i < pageControlItems.length; i++) {
        pageControlItems[i].addEventListener("click", clickPageControl);
    }

    var listControls = {
        "control.filters.FilterByRSSPublishDate": "@(Model.control.filters.FilterByRSSPublishDate)",
        "control.filters.RSSPublishDateFilter": "@(Model.control.filters.RSSPublishDateFilter)",
        "control.filters.FilterByItemType": "@(Model.control.filters.FilterByItemType)",
        "control.filters.ItemTypeFilter": "@(Model.control.filters.ItemTypeFilter)",
        "control.filters.FilterByArtist": "@(Model.control.filters.FilterByArtist)",
        "control.filters.ArtistFilter": "@(Model.control.filters.ArtistFilter)",
        "control.sorter.Ascending": "@(Model.control.sorter.Ascending)",
        "control.sorter.Name": "@(Model.control.sorter.Name)",
        "control.pager.PageSize": "@(Model.control.pager.PageSize)",
        "control.pager.PageNum": "@(Model.control.pager.PageNum)",
        "control.pager.NumPages": "@(Model.control.pager.NumPages)"
    };
    var sortableCols = ["RSSPublishDate", "ItemType", "Artist", "Title"];
    var filterableCols = ["RSSPublishDate", "ItemType", "Artist", "Title"];
    var controlSubmitURL = "@(Url.Action("Index","RSS"))";
</script>
