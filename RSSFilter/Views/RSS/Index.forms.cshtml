@model RSSFilter.ViewModel.RSSListViewModel
@{
    ViewBag.Title = "Browse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Parsed RSS Feed Items</h2>

@if (Model.rssItems.Count() == 0)
{
    <p>k2nblog.com has not yet given us any items.</p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th class="nostretch table-cell-pair-left">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.PublishDateSortParm })">
                        @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).PublishDate)
                    </a>
                </th>
                <th class="nostretch table-cell-pair-right">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.PublishDateSortParm })">
                        <div class="arrow-up-down">
                            <div class="arrow @(ViewBag.PublishDateSortParm.Contains("desc") ? "arrow-hidden" : "")">&#x25b2</div>
                            <div class="arrow @(ViewBag.PublishDateSortParm.Contains("desc") ? "" : "arrow-hidden")">&#x25bc</div>
                        </div>
                    </a>
                </th>
                <th class="table-cell-pair-left">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.ItemTypeSortParm })">
                        @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).ItemTypeMatchExpression.ItemType.Name)
                    </a>
                </th>
                <th class="nostretch table-cell-pair-right">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.ItemTypeSortParm })">
                        <div class="arrow-up-down">
                            <div class="arrow @(ViewBag.ItemTypeSortParm.Contains("desc") ? "arrow-hidden" : "")">&#x25b2</div>
                            <div class="arrow @(ViewBag.ItemTypeSortParm.Contains("desc") ? "" : "arrow-hidden")">&#x25bc</div>
                        </div>
                    </a>
                </th>
                <th class="table-cell-pair-left">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.ArtistSortParm })">
                        @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).ArtistMatchExpression.Artist.Name)
                    </a>
                </th>
                <th class="nostretch table-cell-pair-right">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.ArtistSortParm })">
                        <div class="arrow-up-down">
                            <div class="arrow @(ViewBag.ArtistSortParm.Contains("desc") ? "arrow-hidden" : "")">&#x25b2</div>
                            <div class="arrow @(ViewBag.ArtistSortParm.Contains("desc") ? "" : "arrow-hidden")">&#x25bc</div>
                        </div>
                    </a>
                </th>
                <th class="table-cell-pair-left">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.TitleSortParm })">
                        @Html.DisplayNameFor(m => m.rssItems.ElementAt(0).Title)
                    </a>
                </th>
                <th class="nostretch table-cell-pair-right">
                    <a href="@Url.Action("Index", "RSS", new { sortOrder = ViewBag.TitleSortParm })">
                        <div class="arrow-up-down">
                            <div class="arrow @(ViewBag.TitleSortParm.Contains("desc") ? "arrow-hidden" : "")">&#x25b2</div>
                            <div class="arrow @(ViewBag.TitleSortParm.Contains("desc") ? "" : "arrow-hidden")">&#x25bc</div>
                        </div>
                    </a>
                </th>
                <th class="nostretch"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rssItem in Model.rssItems)
            {
                // Change to use Javascript
                //   make it simply an <a> element
                //   give the <tr> a class like "rss-item-row"
                //   give the <td> a data-col value naming its column (this can be pulled out in javascript
                //   the Javascript will respond to any on-click of an a, or any on-click of an a in a certain thing? not sure
                //     then pull out the value of the <a> tag and use its parent td.data-col value
                <tr class="rss-item-row">
                    <td class="url-hover" colspan="2" data-col="PublishDate">
                        @using (Html.BeginForm("Index", "RSS", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <button type="submit" class="link-button link-button-center">@Html.DisplayFor(m => rssItem.PublishDate)</button>
                            <input name="filters.FilterByPublishDate" value="true" hidden />
                            <input name="filters.PublishDateFilter" value="@(rssItem.PublishDate)" hidden />
                            @Html.HiddenFor(m => m.filters.PublishDateFilter)
                            @Html.HiddenFor(m => m.filters.FilterByPublishDate)
                            @Html.HiddenFor(m => m.filters.ItemTypeFilter)
                            @Html.HiddenFor(m => m.filters.FilterByItemType)
                            @Html.HiddenFor(m => m.filters.ArtistFilter)
                            @Html.HiddenFor(m => m.filters.FilterByArtist)
                        }
                    </td>
                    <td class="url-hover" colspan="2" data-col="Artist">
                        @using (Html.BeginForm("Index", "RSS", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(m => m.filters.PublishDateFilter)
                            @Html.HiddenFor(m => m.filters.FilterByPublishDate)
                            @Html.HiddenFor(m => m.filters.ArtistFilter)
                            @Html.HiddenFor(m => m.filters.FilterByArtist)
                            <button type="submit" class="link-button link-button-center">@Html.DisplayFor(m => rssItem.ItemTypeMatchExpression.ItemType.Name)</button>
                            <input name="filters.FilterByItemType" value="true" hidden />
                            <input name="filters.ItemTypeFilter" value="@(rssItem.ItemTypeMatchExpression.ItemType.Name)" hidden />
                        }
                    </td>
                    <td class="url-hover" colspan="2" data-col="ItemType">
                        @using (Html.BeginForm("Index", "RSS", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(m => m.filters.PublishDateFilter)
                            @Html.HiddenFor(m => m.filters.FilterByPublishDate)
                            @Html.HiddenFor(m => m.filters.ItemTypeFilter)
                            @Html.HiddenFor(m => m.filters.FilterByItemType)
                            <button type="submit" class="link-button link-button-center">@Html.DisplayFor(m => rssItem.ArtistMatchExpression.Artist.Name)</button>
                            <input name="filters.FilterByArtist" value="true" hidden />
                            <input name="filters.ArtistFilter" value="@(rssItem.ArtistMatchExpression.Artist.Name)" hidden />
                        }
                    </td>
                    <td class="url-hover" colspan="2" data-col="Title">
                        @((rssItem.URI != null) ? "<a href='@rssItem.URI'>" : "")
                        @Html.DisplayFor(m => rssItem.Title)
                        @((rssItem.URI != null) ? "</a>" : "")
                    </td>
                    <td data-co="Edit">Edit</td>
                </tr>
                idx++;
            }
        </tbody>
    </table>
}
