@model RSSFilter.Common.ListViewModel<RSSFilter.Models.RSSItem>
@{
    ViewBag.Title = "Browse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using RSSFilter.Models

<div class="main-title">
    <h2>RSS Feed Items</h2>
</div>
<div class="list-control-header">
    <div class="action-buttons">
        <button data-action="MarkNew" title="Mark Unread"><i class="material-icons">markunread</i></button>
        <button data-action="MarkRead" title="Mark Read"><i class="material-icons">mail_outline</i></button>
        <button data-action="Archive" title="Archive"><i class="material-icons">archive</i></button>
    </div>
    <div class="filter-items">
        @foreach (var filter in Model.control.filters)
        {
            if (filter.Name != null)
            {
                <a data-col="@(filter.Name)"><span>@(filter.Value)</span><span><i class="material-icons">close</i></span></a>
            }
        }
    </div>
    <div class="page-size-items">
        Items per page:
        @foreach (var pageSize in Model.control.pager.ValidPageSizes)
        {
            <span class="page-size-item">
                @Html.Raw((Model.control.pager.PageSize != pageSize) ? "<a>" + pageSize.ToString() + "</a>" : pageSize.ToString())
            </span>
        }
    </div>
</div>
<table class="table table-bordered table-hover rss-item-table">
    <thead>
        <tr class="header-row">
            <th data-col="Select">
                <input name="selected" value="true" type="checkbox" />
            </th>
            <th data-col="RSSPublishDate">
                @Html.DisplayNameFor(m => m.items.ElementAt(0).RSSPublishDate)
                @Html.Raw(Model.control.sorter.Name.Equals("RSSPublishDate") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="ItemType">
                @Html.DisplayNameFor(m => m.items.ElementAt(0).ItemType.Name)
                @Html.Raw(Model.control.sorter.Name.Equals("ItemType") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Artist">
                @Html.DisplayNameFor(m => m.items.ElementAt(0).Artist.Name)
                @Html.Raw(Model.control.sorter.Name.Equals("Artist") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Title">
                @Html.DisplayNameFor(m => m.items.ElementAt(0).Title)
                @Html.Raw(Model.control.sorter.Name.Equals("Title") ? (Model.control.sorter.Ascending ? "&#x25b4" : "&#x25be") : "")
            </th>
            <th data-col="Edit"></th>
            <th data-col="Archive"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.items.Count() == 0)
        {
            <tr><td colspan="5">k2nblog.com has not yet given us any items.</td></tr>
        }
        @foreach (var item in Model.items)
        {
            <tr class="rss-item-row" data-id="@(item.Id)" data-artistid="@item.ArtistId" data-itemtypeid="@item.ItemTypeId">
                <td data-col="Select">
                    <input name="selected" value="true" type="checkbox" />
                </td>
                <td class="url-hover" data-col="RSSPublishDate">
                    <span class="content">
                        <a class="text">@Html.DisplayFor(m => item.RSSPublishDate)</a>
                    </span>
                </td>
                <td class="url-hover" data-col="ItemType">
                    <span class="content">
                        <a class="text">@Html.DisplayFor(m => item.ItemType.Name)</a>
                    </span>
                    <span class="thumbs">
                        <i data-itemtypeid="@item.ItemTypeId" data-active="@(item.ItemType.Rating == Rating.LIKE)" data-type="up" class="material-icons thumb">thumb_up</i>
                        <i data-itemtypeid="@item.ItemTypeId" data-active="@(item.ItemType.Rating == Rating.DISLIKE)" data-type="down" class="material-icons thumb">thumb_down</i>
                    </span>
                </td>
                <td class="url-hover" data-col="Artist">
                    <span class="content">
                        <a class="text">@Html.DisplayFor(m => item.Artist.Name)</a>
                    </span>
                    <span class="thumbs">
                        <i data-artistid="@item.ArtistId" data-active="@(item.ItemType.Rating == Rating.LIKE)" data-type="up" class="material-icons thumb">thumb_up</i>
                        <i data-artistid="@item.ArtistId" data-active="@(item.ItemType.Rating == Rating.DISLIKE)" data-type="down" class="material-icons thumb">thumb_down</i>
                    </span>
                </td>
                <td class="url-hover" data-col="Title">
                    <span class="content">
                        <a class="text" data-itemid="@item.Id" href="@((item.RSSURI != null) ? item.RSSURI : "")">
                            @Html.DisplayFor(m => item.Title)
                        </a>
                    </span>
                </td>
                <td data-col="Edit">
                    <span>
                        <a class="text" data-itemid="@item.Id"><i class="material-icons">mode_edit</i></a>
                    </span>
                </td>
                <td data-col="Archive">
                    <span>
                        <a class="text" data-itemid="@item.Id"><i class="material-icons">archive</i></a>
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="page-control">
    <span class="page-control-button">
        @Html.Raw((Model.control.pager.PageNum == 1) ? "Previous" : "<a>Previous</a>")
    </span>
    @if (Model.control.pager.NumPages > 5)
    {
        if (Model.control.pager.PageNum > 4)
        {
            <span class="page-select-button"><a>1</a></span>
            <span class="page-select-ellipsis">&#x25e6 &#x25e6 &#x25e6</span>
            <span class="page-select-button"><a>@(Model.control.pager.PageNum - 1)</a></span>
        }
        else
        {
            for (int i = 1; i <= Model.control.pager.PageNum - 1; i++)
            {
                <span class="page-select-button"><a>@(i)</a></span>
            }
        }
        <span class="page-select-button">@(Model.control.pager.PageNum)</span>
        if ((Model.control.pager.NumPages - Model.control.pager.PageNum) > 4)
        {
            <span class="page-select-button"><a>@(Model.control.pager.PageNum + 1)</a></span>
            <span class="page-select-ellipsis">&#x25e6 &#x25e6 &#x25e6</span>
            <span class="page-select-button"><a>@(Model.control.pager.NumPages)</a></span>
        }
        else
        {
            for (int i = Model.control.pager.PageNum + 1; i <= Model.control.pager.NumPages; i++)
            {
                <span class="page-select-button"><a>@(i)</a></span>
            }
        }
    }
    else
    {
        for (int i = 1; i <= Model.control.pager.PageNum - 1; i++)
        {
            <span class="page-select-button"><a>@(i)</a></span>
        }
        <span class="page-select-button">@(Model.control.pager.PageNum)</span>
        for (int i = Model.control.pager.PageNum + 1; i <= Model.control.pager.NumPages; i++)
        {
            <span class="page-select-button"><a>@(i)</a></span>
        }
    }
    <span class="page-control-button">
        @Html.Raw((Model.control.pager.PageNum == Model.control.pager.NumPages) ? "Next" : "<a>Next</a>")
    </span>
</div>

@Scripts.Render("~/Scripts/list-control.js")
@Scripts.Render("~/Scripts/rss-item-list.js")
<script>
    // list-control.js defines
    controlSubmitURL = "@(Url.Action("Index","RSS"))";

    filterControlPath = "control.filters";
    sortControlPath = "control.sorter";
    pageControlPath = "control.pager";

    @foreach (var filter in Model.control.filters) {
        if (filter.Name != null)
        {
            @:filterControls['@(filter.Name)'] = "@(filter.Value)";
        }
    }

    sortControls['Ascending'] = "@Model.control.sorter.Ascending";
    sortControls['Name'] = "@Model.control.sorter.Name";

    pageControls['PageSize'] = "@Model.control.pager.PageSize";
    pageControls['PageNum'] = "@Model.control.pager.PageNum";
    pageControls['NumPages'] = "@Model.control.pager.NumPages";

    @foreach (var filterField in Model.control.filterableFields.Keys) {
        @:filterableCols.push('@filterField');
    }
    @foreach (var sortField in Model.control.sortableFields.Keys) {
        @:sortableCols.push('@sortField');
    }



    var rssTable = document.getElementsByClassName("rss-item-table")[0];

    // Add sort click handlers
    var rssHeader = rssTable.getElementsByClassName("header-row");
    var rssHeaderCells = rssHeader[0].getElementsByTagName("th");
    for (var i = 0; i < rssHeaderCells.length; i++) {
        if (rssHeaderCells[i].dataset.col.inArray(sortableCols))
            rssHeaderCells[i].addEventListener("click", clickSort);
    }

    // Add filter click handlers
    var rssItemRows = rssTable.getElementsByClassName("rss-item-row");
    for (var i = 0; i < rssItemRows.length; i++) {
        var rssItemCells = rssItemRows[i].getElementsByTagName("td");
        for (var j = 0; j < rssItemCells.length; j++) {
            if (rssItemCells[j].dataset.col.inArray(filterableCols)) {
                rssItemCells[j].getElementsByClassName("content")[0].getElementsByTagName("a")[0].addEventListener("click", clickFilter);
            }
        }
    }

    // Add remove filter click handlers
    var filterDiv = document.getElementsByClassName("filter-items")[0];
    var filterItems = filterDiv.getElementsByTagName("a");
    for (var i = 0; i < filterItems.length; i++) {
        filterItems[i].addEventListener("click", clickRemoveFilter);
    }

    // Add page size click handlers
    var pageSizeDiv = document.getElementsByClassName("page-size-items")[0];
    var pageSizeItems = pageSizeDiv.getElementsByTagName("a");
    for (var i = 0; i < pageSizeItems.length; i++) {
        pageSizeItems[i].addEventListener("click", clickPageSize);
    }

    // Add page control click handlers
    var pageControlDiv = document.getElementsByClassName("page-control")[0];
    var pageControlItems = pageControlDiv.getElementsByTagName("a");
    for (var i = 0; i < pageControlItems.length; i++) {
        pageControlItems[i].addEventListener("click", clickPageControl);
    }

    // Add action button click handlers
    var actionButtonsDiv = document.getElementsByClassName("action-buttons")[0];
    var actionButtons = actionButtonsDiv.getElementsByTagName("button");
    for (var i = 0; i < actionButtons.length; i++) {
        actionButtons[i].addEventListener("click", clickActionButton);
    }

    // Add thumbs click handlers
    var rssItemRows = rssTable.getElementsByClassName("rss-item-row");
    for (var i = 0; i < rssItemRows.length; i++) {
        var thumbs = rssItemRows[i].getElementsByClassName("thumb");
        for (var j = 0; j < thumbs.length; j++) {
            thumbs[j].addEventListener("click", clickThumb);
        }
    }

    // Add Title, Edit, and Archive click handlers
    var rssItemRows = rssTable.getElementsByClassName("rss-item-row");
    for (var i = 0; i < rssItemRows.length; i++) {
        var rssItemTds = rssItemRows[i].getElementsByTagName("td");
        for (var j = 0; j < rssItemTds.length; j++) {
            switch (rssItemTds[j].dataset.col) {
                case "Title":
                    rssItemTds[j].getElementsByTagName("a")[0].addEventListener("click", clickTitle);
                    break;
                case "Edit":
                    rssItemTds[j].getElementsByTagName("a")[0].addEventListener("click", clickEdit);
                    break;
                case "Archive":
                    rssItemTds[j].getElementsByTagName("a")[0].addEventListener("click", clickArchive);
                    break;
            }
        }
    }
</script>
